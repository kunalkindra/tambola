{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/NumberBanner/NumberBanner.js","webpack:///./utils/last.js","webpack:///./index.js","webpack:///./components/NumbersTable/NumbersTable.js","webpack:///../src/util.js","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/clone-element.js","webpack:///../src/create-context.js","webpack:///../src/constants.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///./utils/shuffle.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js","webpack:///./components/app.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NumberBanner","className","number","last","numbers","length","App","NumbersTable","boxes","activeClass","includes","push","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","normalizedProps","arguments","defaultProps","createVNode","ref","original","vnode","_children","_parent","_depth","_dom","_nextDom","_component","constructor","_original","options","createRef","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","_dirty","rerenderQueue","rerenderCount","prevDebounce","debounceRendering","defer","process","queue","sort","a","b","_vnode","some","component","commitQueue","oldVNode","newDom","oldDom","parentDom","_parentDom","diff","_globalContext","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","sibDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","EMPTY_OBJ","toChildArray","childVNode","undefined","nextDom","outer","appendChild","nextSibling","insertBefore","unmount","applyRef","callback","flattened","Array","isArray","setStyle","style","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","event","newVNode","tmp","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","render","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","_force","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","_render","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","_catchError","root","_commit","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","hydrate","diffProps","checked","current","parentVNode","skipRemove","componentWillUnmount","this","replaceNode","_root","IS_HYDRATE","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","subs","_this","_props","old","splice","isValidElement","error","hasCaught","getDerivedStateFromError","setState","componentDidCatch","update","forceUpdate","Promise","then","resolve","setTimeout","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","h","Preact","interopDefault","default","require","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","url","currentURL","canHydrate","location","pathname","CLI_DATA","init","getInitialState","randomizedNumbers","numArray","getRandomizedNumbers","usedNumbers","generateNumber","concat","currentNumber","id","onClick"],"mappings":"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","file":"bundle.e8e62.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","export function NumberBanner({ number }) {\n\treturn (\n\t\t<div className=\"py-2 bg-info rounded text-white number-banner text-center\">\n\t\t\t{number}\n\t\t</div>\n\t);\n}\n","export function last(numbers) {\n\treturn numbers[numbers.length - 1];\n}\n","import './style';\nimport App from './components/app';\n\nexport default App;\n","export default function NumbersTable({ numbers }) {\n\tconst boxes = [];\n\tfor (let i = 1; i <= 90; i++) {\n\t\tlet activeClass = numbers.includes(i) ? 'numbers-table__box--active' : '';\n\t\tboxes.push(<div className={`numbers-table__box ${activeClass}`}><span>{i}</span></div>)\n\t}\n\t\n\treturn (\n\t\t<div className=\"numbers-table\">\n\t\t\t{boxes}\n\t\t</div>\n\t)\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\ti;\n\tfor (i in props) {\n\t\tif (i !== 'key' && i !== 'ref') normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(\n\t\ttype,\n\t\tnormalizedProps,\n\t\tprops && props.key,\n\t\tprops && props.ref,\n\t\tnull\n\t);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original\n\t};\n\n\tif (original == null) vnode._original = vnode;\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\tupdate = update(s, this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = oldVNode;\n\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tnull,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\nlet rerenderCount = 0;\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti = 0;\n\tnewParentVNode._children = toChildArray(\n\t\tnewParentVNode._children,\n\t\tchildVNode => {\n\t\t\tif (childVNode != null) {\n\t\t\t\tchildVNode._parent = newParentVNode;\n\t\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t\t// (holes).\n\t\t\t\toldVNode = oldChildren[i];\n\n\t\t\t\tif (\n\t\t\t\t\toldVNode === null ||\n\t\t\t\t\t(oldVNode &&\n\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t\t\t) {\n\t\t\t\t\toldChildren[i] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\toldVNode &&\n\t\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toldVNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\t\tnewDom = diff(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\tglobalContext,\n\t\t\t\t\tisSvg,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tcommitQueue,\n\t\t\t\t\toldDom,\n\t\t\t\t\tisHydrating\n\t\t\t\t);\n\n\t\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t\tif (!refs) refs = [];\n\t\t\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t\t\t}\n\n\t\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\t\tif (newDom != null) {\n\t\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet nextDom;\n\t\t\t\t\tif (childVNode._nextDom !== undefined) {\n\t\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t\t\t\t\t// of last DOM child of this child VNode\n\t\t\t\t\t\tnextDom = childVNode._nextDom;\n\n\t\t\t\t\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t\t\t\t\t// can clean up the property\n\t\t\t\t\t\tchildVNode._nextDom = undefined;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\texcessDomChildren == oldVNode ||\n\t\t\t\t\t\tnewDom != oldDom ||\n\t\t\t\t\t\tnewDom.parentNode == null\n\t\t\t\t\t) {\n\t\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t\t\tnextDom = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tsibDom = oldDom, j = 0;\n\t\t\t\t\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildrenLength;\n\t\t\t\t\t\t\t\tj += 2\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t\t\tnextDom = oldDom;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t\t// updated properly.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t\t\t\t\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t\t\t\t\t// See more detail in create-element.js:createVNode\n\t\t\t\t\tif (nextDom !== undefined) {\n\t\t\t\t\t\toldDom = nextDom;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toldDom = newDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t\t\t// node's nextSibling.\n\n\t\t\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\toldDom &&\n\t\t\t\t\toldVNode._dom == oldDom &&\n\t\t\t\t\toldDom.parentNode != parentDom\n\t\t\t\t) {\n\t\t\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t\treturn childVNode;\n\t\t}\n\t);\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type != 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children == null || typeof children == 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t} else if (Array.isArray(children)) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t} else if (!callback) {\n\t\tflattened.push(children);\n\t} else if (typeof children == 'string' || typeof children == 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null, children)));\n\t} else if (children._dom != null || children._component != null) {\n\t\tflattened.push(\n\t\t\tcallback(\n\t\t\t\tcreateVNode(\n\t\t\t\t\tchildren.type,\n\t\t\t\t\tchildren.props,\n\t\t\t\t\tchildren.key,\n\t\t\t\t\tnull,\n\t\t\t\t\tchildren._original\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (\n\t\ttypeof value == 'number' &&\n\t\tIS_NON_DIMENSIONAL.test(key) === false\n\t) {\n\t\tstyle[key] = value + 'px';\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else {\n\t\tstyle[key] = value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tlet s, useCapture, nameLower;\n\n\tif (isSvg) {\n\t\tif (name === 'className') {\n\t\t\tname = 'class';\n\t\t}\n\t} else if (name === 'class') {\n\t\tname = 'className';\n\t}\n\n\tif (name === 'style') {\n\t\ts = dom.style;\n\n\t\tif (typeof value == 'string') {\n\t\t\ts.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tnameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t} else {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\tname !== 'size' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n\t\tif (name !== (name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tvalue == null ||\n\t\t\t(value === false &&\n\t\t\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t\t\t// The value `false` is different from the attribute not\n\t\t\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t\t\t// that other VDOM frameworks also always stringify `false`.\n\t\t\t\t!/^ar/.test(name))\n\t\t) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t(newVNode._original === oldVNode._original && !c._processingException)\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) {\n\t\t\t\t\t\t\tnewVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = isTopLevelFragment\n\t\t\t\t? tmp.props.children\n\t\t\t\t: Array.isArray(tmp)\n\t\t\t\t? tmp\n\t\t\t\t: [tmp];\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t((newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type) ||\n\t\t\t\t\tdom == child)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(\n\t\t\t\t\tnewVNode.type,\n\t\t\t\t\tnewProps.is && { is: newProps.is }\n\t\t\t  );\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (newVNode.type === null) {\n\t\tif (oldProps !== newProps && dom.data != newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\tnewProps.value !== undefined &&\n\t\t\t\tnewProps.value !== dom.value\n\t\t\t) {\n\t\t\t\tdom.value = newProps.value == null ? '' : newProps.value;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\tnewProps.checked !== undefined &&\n\t\t\t\tnewProps.checked !== dom.checked\n\t\t\t) {\n\t\t\t\tdom.checked = newProps.checked;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we\n\t// are in hydration mode or not by passing `IS_HYDRATE` instead of a\n\t// DOM element.\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length > 2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(\n\t\tvnode.type,\n\t\tprops,\n\t\tprops.key || vnode.key,\n\t\tprops.ref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, hasCaught;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tcomponent.constructor &&\n\t\t\t\t\tcomponent.constructor.getDerivedStateFromError != null\n\t\t\t\t) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.setState(\n\t\t\t\t\t\tcomponent.constructor.getDerivedStateFromError(error)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\n\t\t\t\tif (hasCaught)\n\t\t\t\t\treturn enqueueRender((component._pendingError = component));\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","export function shuffle(array) {\n\tlet currentIndex = array.length, temporaryValue, randomIndex;\n\t\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\t\t\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\t\n\treturn array;\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\tif (process.env.RHL) {\n\t\t// enable hot loader\n\t\tconst hotLoader = interopDefault(require('react-hot-loader'));\n\t\thotLoader.preact(interopDefault(require('preact')));\n\t}\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(__webpack_public_path__ + 'sw-debug.js');\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(\n\t\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t// eslint-disable-next-line no-undef\n\tnavigator.serviceWorker.register(\n\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(inlineDataElement.innerHTML).preRenderData || preRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === location.pathname;\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\troot = doRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { Component } from 'preact';\nimport { shuffle } from '../utils/shuffle';\nimport { last } from '../utils/last';\nimport NumbersTable from './NumbersTable/NumbersTable';\nimport { NumberBanner } from './NumberBanner/NumberBanner';\n\nfunction getRandomizedNumbers() {\n\tlet numArray = [];\n\tfor (let i = 1; i <= 90; i++) { numArray.push(i) }\n\treturn shuffle(numArray);\n}\n\nfunction getInitialState() {\n\tlet randomizedNumbers = getRandomizedNumbers();\n\treturn {\n\t\tnumbers: randomizedNumbers.slice(0, randomizedNumbers.length - 1),\n\t\tusedNumbers: [last(randomizedNumbers)],\n\t};\n}\n\n\nexport default class App extends Component {\n\tstate = getInitialState();\n\t\n\tgenerateNumber = () => {\n\t\tlet { numbers, usedNumbers } = this.state;\n\t\tthis.setState({\n\t\t\tnumbers: numbers.slice(0, numbers.length - 1),\n\t\t\tusedNumbers: usedNumbers.concat(last(numbers)),\n\t\t})\n\t};\n\t\n\trender() {\n\t\tconst { usedNumbers } = this.state;\n\t\tconst currentNumber = last(usedNumbers);\n\t\treturn (\n\t\t\t<div id=\"app\" className=\"container-fluid p-4\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col col-sm-7\">\n\t\t\t\t\t\t<NumbersTable numbers={usedNumbers} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col col-sm-5 d-flex align-items-center flex-column\">\n\t\t\t\t\t\t<NumberBanner number={currentNumber} />\n\t\t\t\t\t\t<div className=\"mb-4\" />\n\t\t\t\t\t\t<button className=\"btn btn-lg btn-primary\" onClick={this.generateNumber}>\n\t\t\t\t\t\t\tTambola bhyi Tambola\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n"],"sourceRoot":""}